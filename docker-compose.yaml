version: '3.8'

services:
  app:
    container_name: video-upload-app
    build:
      context: .
      dockerfile: Dockerfile
    image: badal1/video-upload-service:compose-dev
    restart: unless-stopped
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    environment:
      PORT: ${PORT:-3000}
      DB_HOST: mysql
      DB_PORT: ${DB_PORT:-3306}
      DB_NAME: ${DB_NAME:-video_service_db}
      DB_USER: ${DB_USER:-video_user}
      DB_PASSWORD: ${DB_PASSWORD:-video_password}
      DATABASE_URL: 'mysql://${DB_USER:-video_user}:${DB_PASSWORD:-video_password}@mysql:${DB_PORT:-3306}/${DB_NAME:-video_service_db}'
      MAX_FILE_SIZE_MB: ${MAX_FILE_SIZE_MB:-100}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME:?err_aws_bucket_name_not_set}
      AWS_REGION: ${AWS_REGION:?err_aws_region_not_set}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:?err_aws_access_key_id_not_set}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:?err_aws_secret_access_key_not_set}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_NODE_PORT: ${RABBITMQ_NODE_PORT}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
    volumes:
      - .:/app
      # - ./tsconfig.json:/app/tsconfig.json
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: npm run start

  mysql:
    image: mysql:8.0-bookworm
    container_name: video-upload-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-supersecret_dev_root_password}
      MYSQL_DATABASE: ${DB_NAME:-video_service_db}
      MYSQL_USER: ${DB_USER:-video_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-video_password}
    ports:
      - '${DB_PORT:-3306}:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          '${DB_USER:-video_user}',
          '-p${DB_PASSWORD:-video_password}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:4.1.0-beta.5-management-alpine
    container_name: video-upload-rabbitmq
    hostname: video-upload-rabbitmq-host
    ports:
      - '${RABBITMQ_MANAGEMENT_PORT:-15672}:15672'
      - '${RABBITMQ_NODE_PORT:-5672}:5672'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-app_user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-app_password}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
  rabbitmq_data:
